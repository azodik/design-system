{
    "welcome": "Welcome to Azodik Design System",
    "gettingStarted": "Getting Started",
    "introduction": "Introduction",
    "whatsIncluded": "What's Included",
    "modernDesign": "Modern Design",
    "modernDesignDesc": "Beautiful orange color palette with dark/light mode",
    "typescriptFirst": "TypeScript First",
    "typescriptFirstDesc": "Full TypeScript support with comprehensive type definitions",
    "accessible": "Accessible",
    "accessibleDesc": "Built with accessibility in mind using modern patterns",
    "responsive": "Responsive",
    "responsiveDesc": "Mobile-first responsive design",
    "treeShakeable": "Tree Shakeable",
    "treeShakeableDesc": "Import only what you need",
    "customizable": "Customizable",
    "customizableDesc": "Easy to customize with CSS custom properties",
    "lightweight": "Lightweight",
    "lightweightDesc": "Optimized bundle size",
    "installation": "Installation",
    "requirements": "Requirements",
    "bundleSize": "Bundle Size",
    "quickStart": "Quick Start",
    "basicExamples": "Basic Examples",
    "buttonComponent": "Button Component",
    "alertComponent": "Alert Component",
    "cardComponent": "Card Component",
    "availableComponents": "Available Components",
    "formComponents": "Form Components",
    "layoutComponents": "Layout Components",
    "feedbackComponents": "Feedback Components",
    "dataDisplay": "Data Display",
    "interactiveComponents": "Interactive Components",
    "theming": "Theming",
    "cssCustomProperties": "CSS Custom Properties",
    "themeSwitching": "Theme Switching",
    "typescriptSupport": "TypeScript Support",
    "treeShaking": "Tree Shaking",
    "nextSteps": "Next Steps",
    "support": "Support",
    "happyBuilding": "Happy building! ðŸš€",
    "installDescription": "Install both the Azodik UI React components and the CSS design system. The React components provide the interactive elements, while the CSS package provides the styling foundation.",
    "onceInstalled": "Once installed, you can start using components in your React application:",
    "reactHooksSupport": "React 16.8+ (hooks support)",
    "typescriptOptional": "TypeScript 4.5+ (optional but recommended)",
    "nodejsDevelopment": "Node.js 14+ for development",
    "treeShakeableComponents": "Tree-shakeable components",
    "bundleSizeInfo": "~19KB CSS + ~35KB React (gzipped)",
    "individualImports": "Individual component imports",
    "ourDesignSystem": "Our design system includes a comprehensive collection of React components:",
    "formComponentsDesc": "Form Components",
    "inputDesc": "Text input fields with validation states",
    "textareaDesc": "Multi-line text inputs",
    "selectDesc": "Dropdown selection inputs",
    "checkboxDesc": "Form input checkboxes",
    "radioDesc": "Radio button inputs",
    "switchDesc": "Toggle switches",
    "layoutComponentsDesc": "Layout Components",
    "cardDesc": "Content containers with headers and footers",
    "navigationDesc": "Navigation menus and bars",
    "sidebarDesc": "Application sidebars and navigation",
    "tabsDesc": "Tabbed content organization",
    "feedbackComponentsDesc": "Feedback Components",
    "alertDesc": "Display important messages to users",
    "modalDesc": "Overlay dialogs and popups",
    "toastDesc": "Notification messages",
    "tooltipDesc": "Contextual help text",
    "popoverDesc": "Floating content containers",
    "dataDisplayDesc": "Data Display",
    "tableDesc": "Data tables with sorting and filtering",
    "dataTableDesc": "Advanced data tables with pagination",
    "avatarDesc": "User profile pictures and initials",
    "badgeDesc": "Small status indicators and labels",
    "breadcrumbDesc": "Navigation breadcrumbs",
    "paginationDesc": "Page navigation controls",
    "interactiveComponentsDesc": "Interactive Components",
    "buttonDesc": "Interactive buttons with multiple variants",
    "dialogDesc": "Modal dialogs and overlays",
    "drawerDesc": "Slide-out panels",
    "scrollAreaDesc": "Custom scrollable areas",
    "themingDesc": "The design system uses CSS custom properties for easy theming:",
    "themeSwitchingDesc": "Theme Switching",
    "typescriptSupportDesc": "Full TypeScript definitions are included for all components:",
    "treeShakingDesc": "Import only what you need to keep your bundle size small:",
    "nextStepsDesc": "Next Steps",
    "exploreComponentsDesc": "Explore Components",
    "viewExamplesDesc": "View Examples",
    "copyCodeDesc": "Copy Code",
    "customizeDesc": "Customize",
    "supportDesc": "Need help? Check out our documentation or reach out to our support team.",
    "buttonVariants": "Button Variants",
    "alertTypes": "Alert Types",
    "cardLayout": "Card Layout",
    "comprehensiveGuide": "This comprehensive guide will help you integrate our components into your projects quickly and efficiently.",
    "introductionDesc": "The Azodik Design System is a modern, accessible, and highly customizable component library built with React and TypeScript. It provides everything you need to build beautiful, consistent user interfaces.",
    "browseComponents": "Browse through individual component documentation in the sidebar",
    "viewExamplesDesc2": "Each component page includes live examples and code snippets",
    "copyCodeDesc2": "Use the provided code examples to quickly integrate components",
    "customizeDesc2": "Learn about available props and customization options",
    "accordion": "Accordion",
    "alert": "Alert",
    "avatar": "Avatar",
    "badge": "Badge",
    "breadcrumb": "Breadcrumb",
    "button": "Button",
    "card": "Card",
    "charts": "Charts",
    "checkbox": "Checkbox",
    "dialog": "Dialog",
    "drawer": "Drawer",
    "dataTable": "DataTable",
    "form": "Form",
    "input": "Input",
    "modal": "Modal",
    "navigation": "Navigation",
    "pagination": "Pagination",
    "popover": "Popover",
    "radio": "Radio",
    "scrollArea": "ScrollArea",
    "select": "Select",
    "sidebar": "Sidebar",
    "switch": "Switch",
    "table": "Table",
    "tabs": "Tabs",
    "textarea": "Textarea",
    "toast": "Toast",
    "tooltip": "Tooltip",
    "accordionComponent": "Accordion Component",
    "accordionDescription": "The Accordion component is used to display collapsible content sections. It provides a clean way to organize information that can be expanded or collapsed by users.",
    "accordionIntroduction": "Introduction",
    "accordionIntroDesc": "The Accordion component includes several complementary utility components to handle various use cases:",
    "accordionWrapper": "Accordion: the wrapper for grouping related components.",
    "accordionItem": "AccordionItem: individual collapsible sections within the accordion.",
    "accordionTrigger": "AccordionTrigger: the clickable header that expands or collapses the content.",
    "accordionContent": "AccordionContent: the collapsible content area that shows/hides based on trigger state.",
    "accordionStateManagement": "Accordion State Management: controlled and uncontrolled state handling for single or multiple open items.",
    "accordionAccessibility": "Accordion Accessibility: built-in keyboard navigation and ARIA attributes for screen reader support.",
    "whenToUse": "When to use",
    "displayFaqs": "Display frequently asked questions (FAQs)",
    "organizeDocumentation": "Organize documentation or help content",
    "showHierarchicalInfo": "Show hierarchical information",
    "createCollapsibleMenus": "Create collapsible navigation menus",
    "groupRelatedContent": "Group related content sections",
    "usage": "Usage",
    "basicExample": "Basic Example",
    "basicAccordion": "Basic Accordion",
    "whatIsAccordion": "What is an accordion?",
    "accordionExplanation": "An accordion is a UI component that allows users to expand and collapse content sections. It's commonly used for FAQs, documentation, and organizing information in a space-efficient way.",
    "howDoesItWork": "How does it work?",
    "accordionWorkExplanation": "Users can click on the accordion trigger to expand or collapse the content. Only one section can be open at a time in single mode, or multiple sections can be open in multiple mode.",
    "whenShouldIUseIt": "When should I use it?",
    "accordionUseExplanation": "Use accordions when you have related content that doesn't need to be visible all at once. They're perfect for FAQs, feature descriptions, or any hierarchical information that can be organized into collapsible sections.",
    "multipleItemsOpen": "Multiple Items Open",
    "allowMultipleItems": "Allow Multiple Items",
    "firstSection": "First Section",
    "firstSectionContent": "This is the first section. You can have multiple sections open at the same time.",
    "secondSection": "Second Section",
    "secondSectionContent": "This is the second section. Notice how both sections can be open simultaneously.",
    "thirdSection": "Third Section",
    "thirdSectionContent": "This is the third section. All sections can be open or closed independently.",
    "disabledItems": "Disabled Items",
    "availableSection": "Available Section",
    "availableSectionContent": "This section is available and can be opened.",
    "disabledSection": "Disabled Section",
    "disabledSectionContent": "This section is disabled and cannot be opened.",
    "anotherAvailableSection": "Another Available Section",
    "anotherAvailableSectionContent": "This section is also available and can be opened.",
    "props": "Props",
    "accordionProps": "Accordion Props",
    "accordionItemProps": "AccordionItem Props",
    "accordionTriggerProps": "AccordionTrigger Props",
    "accordionContentProps": "AccordionContent Props",
    "accessibility": "Accessibility",
    "designGuidelines": "Design Guidelines",
    "accordionHeadersAria": "Accordion headers have proper ARIA attributes",
    "keyboardNavigationSupported": "Keyboard navigation is fully supported",
    "screenReadersAnnounceAccordionState": "Screen readers can properly announce accordion state",
    "disabledItemsMarked": "Disabled items are properly marked for assistive technologies",
    "useClearDescriptiveTitles": "Use clear, descriptive titles for accordion items",
    "keepContentConcise": "Keep content concise and scannable",
    "considerUserMentalModel": "Consider the user's mental model when organizing content",
    "useAccordionsForHiddenContent": "Use accordions for content that doesn't need to be visible all the time",
    "provideVisualFeedback": "Provide visual feedback for interactive states",
    "ensureAdequateSpacing": "Ensure adequate spacing between items",
    "alertDescription": "The Alert component is used to display important messages to users. It provides different variants for various types of notifications and can include actions like close buttons.",
    "alertIntroduction": "Introduction",
    "alertIntroDesc": "The Alert component includes several complementary features to handle various notification scenarios:",
    "alertMainWrapper": "Alert: the main wrapper for displaying important messages to users.",
    "alertVariants": "Alert Variants: different visual styles (success, warning, error, info) to indicate the type of message.",
    "alertActions": "Alert Actions: optional close button functionality for dismissible alerts.",
    "alertCustomization": "Alert Customization: flexible sizing and styling options for different use cases.",
    "alertIcons": "Alert Icons: automatic icon generation based on variant or custom icon support.",
    "alertAccessibility": "Alert Accessibility: built-in ARIA attributes and screen reader support for better user experience.",
    "displaySuccessWarning": "Display success, warning, error, or informational messages",
    "showImportantNotifications": "Show important notifications that require user attention",
    "provideFeedback": "Provide feedback for user actions",
    "variants": "Variants",
    "alertVariantsTitle": "Alert Variants",
    "someVariantsExample": "Some Variants Example",
    "allAlertVariants": "All Alert Variants",
    "withCloseButton": "With Close Button",
    "dismissibleAlert": "Dismissible Alert",
    "customSizing": "Custom Sizing",
    "customSizingExample": "Custom Sizing Example",
    "alertsHaveAria": "Alerts have appropriate ARIA roles and attributes",
    "screenReadersAnnounce": "Screen readers will announce alert content",
    "focusManagementHandled": "Focus management is handled for dismissible alerts",
    "colorNotOnlyWay": "Color is not the only way to convey information",
    "useSuccessAlerts": "Use success alerts for positive feedback",
    "useWarningAlerts": "Use warning alerts for important information that doesn't prevent action",
    "useErrorAlerts": "Use error alerts for problems that need immediate attention",
    "useInfoAlerts": "Use info alerts for general information",
    "keepAlertMessagesConcise": "Keep alert messages concise and actionable",
    "provideClearCloseActions": "Provide clear close actions when appropriate",
    "avatarComponent": "Avatar Component",
    "avatarDescription": "The Avatar component displays user profile images, initials, or placeholder icons. It provides a consistent way to represent users throughout your application.",
    "overview": "Overview",
    "avatarOverviewDesc": "Avatars are used to represent users in your application. They can display profile images, user initials, or fallback icons when no image is available.",
    "displayUserProfilePictures": "Display user profile pictures",
    "showUserInitials": "Show user initials when no image is available",
    "representUsersInLists": "Represent users in lists, comments, or user interfaces",
    "createConsistentUserRepresentation": "Create consistent user representation across the app",
    "allAvatarVariants": "All Avatar Variants",
    "withInitials": "With Initials",
    "avatarWithInitials": "Avatar with Initials",
    "avatarGroup": "Avatar Group",
    "avatarSizes": "Avatar Sizes",
    "avatarProps": "Avatar Props",
    "avatarGroupProps": "AvatarGroup Props",
    "avatarsHaveAltText": "Avatars have appropriate alt text for screen readers",
    "initialsGeneratedFromName": "Initials are generated from the name prop for better accessibility",
    "colorContrastMeetsWCAG": "Color contrast meets WCAG guidelines",
    "focusStatesProvided": "Focus states are provided for interactive avatars",
    "useConsistentSizing": "Use consistent sizing across your application",
    "provideMeaningfulAltText": "Provide meaningful alt text for images",
    "useInitialsAsFallback": "Use initials as fallback when images are not available",
    "considerContextWhenChoosingSizes": "Consider the context when choosing avatar sizes",
    "ensureAvatarsRecognizable": "Ensure avatars are recognizable and not too small",
    "badgeComponent": "Badge Component",
    "badgeDescription": "The Badge component displays small status indicators, labels, counts, and notifications. It's perfect for highlighting important information or showing quantities.",
    "badgeIntroDesc": "The Badge component includes several complementary features to handle various status and notification scenarios:",
    "badgeMainWrapper": "Badge: the main wrapper for displaying small status indicators and labels.",
    "badgeVariants": "Badge Variants: different visual styles (primary, secondary, success, warning, error, info, neutral) to indicate status.",
    "badgeSizing": "Badge Sizing: multiple size options (sm, md, lg) for different use cases and contexts.",
    "badgeCustomization": "Badge Customization: flexible border radius and styling options for different design needs.",
    "badgeIcons": "Badge Icons: optional icon support to enhance visual communication and context.",
    "badgeActions": "Badge Actions: optional remove functionality for dismissible badges and interactive elements.",
    "displayStatusIndicators": "Display status indicators (success, warning, error)",
    "showCountsOrQuantities": "Show counts or quantities",
    "labelContentWithCategories": "Label content with categories or tags",
    "highlightImportantInformation": "Highlight important information",
    "showNotificationCounts": "Show notification counts",
    "allBadgeVariants": "All Badge Variants",
    "differentSizes": "Different Sizes",
    "badgeSizes": "Badge Sizes",
    "badgesHaveColorContrast": "Badges have appropriate color contrast",
    "textContentReadable": "Text content is readable at all sizes",
    "screenReadersAccessBadge": "Screen readers can access badge content",
    "useAppropriateVariants": "Use appropriate variants for different contexts",
    "keepBadgeTextConcise": "Keep badge text concise and clear",
    "ensureSufficientContrast": "Ensure sufficient contrast for readability",
    "considerBackgroundWhenChoosing": "Consider the background when choosing colors",
    "breadcrumbComponent": "Breadcrumb Component",
    "breadcrumbDescription": "The Breadcrumb component shows the current page location within the site hierarchy. It helps users understand where they are and navigate back to previous levels.",
    "breadcrumbIntroDesc": "The Breadcrumb component includes several complementary features to handle various navigation and hierarchy scenarios:",
    "breadcrumbMainWrapper": "Breadcrumb: the main wrapper for displaying hierarchical navigation trails.",
    "breadcrumbItems": "Breadcrumb Items: individual navigation elements that represent each level in the hierarchy.",
    "breadcrumbNavigation": "Breadcrumb Navigation: clickable links that allow users to navigate back to previous levels.",
    "breadcrumbSeparators": "Breadcrumb Separators: visual indicators that show the relationship between navigation levels.",
    "breadcrumbStateManagement": "Breadcrumb State Management: current page indication and proper link handling for navigation.",
    "breadcrumbAccessibility": "Breadcrumb Accessibility: built-in ARIA attributes and keyboard navigation for screen reader support.",
    "showHierarchicalNavigationPaths": "Show hierarchical navigation paths",
    "helpUsersUnderstandLocation": "Help users understand their current location",
    "provideQuickNavigationToParent": "Provide quick navigation to parent pages",
    "displaySiteStructure": "Display the site structure",
    "aidInSEOAndUserExperience": "Aid in SEO and user experience",
    "allBreadcrumbVariants": "All Breadcrumb Variants",
    "breadcrumbItemInterface": "BreadcrumbItem Interface",
    "breadcrumbsHaveSemanticStructure": "Breadcrumbs have proper semantic structure",
    "screenReadersNavigateBreadcrumb": "Screen readers can navigate the breadcrumb trail",
    "properAriaAttributesApplied": "Proper ARIA attributes are applied",
    "currentPageClearlyIdentified": "Current page is clearly identified",
    "keepBreadcrumbLabelsConcise": "Keep breadcrumb labels concise and clear",
    "useConsistentSeparators": "Use consistent separators throughout the site",
    "considerMobileResponsiveness": "Consider mobile responsiveness",
    "dontMakeBreadcrumbsTooDeep": "Don't make breadcrumbs too deep (3-5 levels max)",
    "buttonDescription": "The Button component provides interactive elements for user actions and navigation. It supports multiple variants, sizes, and states to fit different use cases.",
    "buttonIntroDesc": "The Button component includes several complementary features to handle various interaction and action scenarios:",
    "buttonMainWrapper": "Button: the main wrapper for creating interactive elements and user actions.",
    "buttonVariantsIntro": "Button Variants: different visual styles (primary, secondary, tertiary, outline, link, ghost, destructive) for various use cases.",
    "buttonSizing": "Button Sizing: multiple size options (sm, md, lg) to fit different contexts and design requirements.",
    "buttonStates": "Button States: disabled, loading, and interactive states to provide proper user feedback.",
    "buttonCustomization": "Button Customization: flexible color, width, and styling options for brand-specific designs.",
    "buttonAccessibility": "Button Accessibility: built-in focus management, keyboard navigation, and screen reader support.",
    "primaryActionsAndCallsToAction": "Primary actions and calls-to-action",
    "formSubmissions": "Form submissions",
    "navigationBetweenPagesOrSections": "Navigation between pages or sections",
    "confirmingOrCancelingActions": "Confirming or canceling actions",
    "triggeringModalsOrDropdowns": "Triggering modals or dropdowns",
    "someVariants": "Some Variants",
    "allButtonVariants": "All Button Variants",
    "withIcons": "With Icons",
    "buttonWithIcons": "Button with Icons",
    "disabledState": "Disabled State",
    "disabledButton": "Disabled Button",
    "buttonsHaveFocusStates": "Buttons have proper focus states",
    "screenReadersIdentifyButtonPurpose": "Screen readers can identify button purpose",
    "disabledButtonsProperlyAnnounced": "Disabled buttons are properly announced",
    "usePrimaryButtonsForMainActions": "Use primary buttons for main actions",
    "useSecondaryButtonsForSecondaryActions": "Use secondary buttons for secondary actions",
    "useDestructiveButtonsForDangerousActions": "Use destructive buttons for dangerous actions",
    "keepButtonTextConciseAndActionOriented": "Keep button text concise and action-oriented",
    "ensureSufficientTouchTargetsOnMobile": "Ensure sufficient touch targets on mobile devices",
    "cardDescription": "The Card component provides flexible containers for grouping related content and actions. It's perfect for displaying information in a structured and visually appealing way.",
    "cardIntroDesc": "The Card component includes several complementary features to handle various content organization and presentation scenarios:",
    "cardMainWrapper": "Card: the main wrapper for creating flexible content containers and structured layouts.",
    "cardHeader": "Card Header: optional header section for titles, actions, and important information.",
    "cardContent": "Card Content: the main content area for text, images, and other components.",
    "cardCustomization": "Card Customization: flexible sizing, padding, colors, and styling options for different design needs.",
    "cardInteractions": "Card Interactions: hover effects and interactive states to enhance user engagement.",
    "cardAccessibility": "Card Accessibility: proper semantic structure and focus management for screen reader support.",
    "displayRelatedInformationTogether": "Display related information together",
    "createContentBlocksOrSections": "Create content blocks or sections",
    "showProductInformationOrUserProfiles": "Show product information or user profiles",
    "groupFormElementsOrSettings": "Group form elements or settings",
    "displayStatisticsOrMetrics": "Display statistics or metrics",
    "allCardVariants": "All Card Variants",
    "withHeaderAndTitle": "With Header and Title",
    "cardWithHeader": "Card with Header",
    "withActions": "With Actions",
    "cardWithActions": "Card with Actions",
    "cardsHaveSemanticStructure": "Cards have proper semantic structure",
    "focusManagementForInteractiveCards": "Focus management for interactive cards",
    "screenReadersNavigateCardContent": "Screen readers can navigate card content",
    "properHeadingHierarchyWhenUsingCardTitle": "Proper heading hierarchy when using CardTitle",
    "useConsistentPaddingAndSpacing": "Use consistent padding and spacing",
    "groupRelatedContentTogether": "Group related content together",
    "provideClearVisualHierarchy": "Provide clear visual hierarchy",
    "useAppropriateElevationForDepth": "Use appropriate elevation for depth",
    "chartsComponent": "Charts Component",
    "chartsDescription": "The Charts component provides a comprehensive set of data visualization components built on top of Recharts. It includes Line, Area, Bar, and Pie charts with customizable styling and interactive features.",
    "chartsIntroduction": "Introduction",
    "chartsIntroDesc": "The Charts component includes several complementary features to handle various data visualization and analytics scenarios:",
    "chartsMainWrapper": "Charts: the main wrapper for creating comprehensive data visualization components built on Recharts.",
    "chartTypes": "Chart Types: multiple chart variants (Line, Area, Bar, Pie) for different data representation needs.",
    "chartCustomization": "Chart Customization: flexible colors, sizing, titles, and styling options for brand-specific designs.",
    "chartInteractivity": "Chart Interactivity: built-in tooltips, legends, and hover effects to enhance data exploration.",
    "chartResponsiveness": "Chart Responsiveness: adaptive sizing and mobile-friendly layouts for different screen sizes.",
    "chartAccessibility": "Chart Accessibility: proper ARIA attributes and keyboard navigation for screen reader support.",
    "whenToUseCharts": "When to use",
    "displayTrendsOverTime": "Display trends over time (Line charts)",
    "showCumulativeData": "Show cumulative data (Area charts)",
    "compareValuesAcrossCategories": "Compare values across categories (Bar charts)",
    "showProportionalData": "Show proportional data (Pie charts)",
    "createDashboardsAndAnalytics": "Create dashboards and analytics interfaces",
    "visualizeBusinessMetrics": "Visualize business metrics and KPIs",
    "usageCharts": "Usage",
    "basicExampleCharts": "Basic Example",
    "lineChart": "Line Chart",
    "areaChart": "Area Chart",
    "barChart": "Bar Chart",
    "pieChart": "Pie Chart",
    "customizationCharts": "Customization",
    "customizedCharts": "Customized Charts",
    "propsCharts": "Props",
    "commonChartProps": "Common Chart Props",
    "lineChartProps": "LineChart Props",
    "areaChartProps": "AreaChart Props",
    "barChartProps": "BarChart Props",
    "pieChartProps": "PieChart Props",
    "dataFormat": "Data Format",
    "accessibilityCharts": "Accessibility",
    "designGuidelinesCharts": "Design Guidelines",
    "chartsBuiltWithAccessibility": "Charts are built with accessibility in mind using Recharts",
    "screenReadersCanAccess": "Screen readers can access chart data through proper ARIA attributes",
    "keyboardNavigationSupportedCharts": "Keyboard navigation is supported for interactive elements",
    "colorNotOnlyWayCharts": "Color is not the only way to convey information",
    "tooltipsProvideAdditionalContext": "Tooltips provide additional context for data points",
    "useAppropriateChartTypes": "Use appropriate chart types for your data",
    "keepTitlesAndLabelsConcise": "Keep titles and labels concise and descriptive",
    "useConsistentColorsCharts": "Use consistent colors across related charts",
    "ensureSufficientContrastCharts": "Ensure sufficient contrast for readability",
    "considerResponsiveDesign": "Consider responsive design for different screen sizes",
    "useLegendsWhenMultipleData": "Use legends when multiple data series are present",
    "checkboxComponent": "Checkbox Component",
    "checkboxDescription": "The Checkbox component provides binary choice controls for enabling or disabling options. It's perfect for forms that require multiple selections or toggles.",
    "checkboxIntroduction": "Introduction",
    "checkboxIntroDesc": "The Checkbox component includes several complementary features to handle various form input and selection scenarios:",
    "checkboxMainWrapper": "Checkbox: the main wrapper for creating binary choice controls and form inputs.",
    "checkboxStates": "Checkbox States: multiple interaction states (checked, unchecked, disabled) with clear visual feedback.",
    "checkboxSizing": "Checkbox Sizing: different size options (sm, md, lg) to fit various design contexts and requirements.",
    "checkboxLabels": "Checkbox Labels: built-in label support with help text and error message capabilities.",
    "checkboxValidation": "Checkbox Validation: integrated error handling and validation feedback for form workflows.",
    "checkboxAccessibility": "Checkbox Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support.",
    "whenToUseCheckbox": "When to use",
    "multipleSelectionsFromList": "Multiple selections from a list",
    "enablingOrDisablingFeatures": "Enabling or disabling features",
    "agreeingToTermsAndConditions": "Agreeing to terms and conditions",
    "filteringOptions": "Filtering options",
    "settingsAndPreferences": "Settings and preferences",
    "usageCheckbox": "Usage",
    "variantsCheckbox": "Variants",
    "allCheckboxVariants": "All Checkbox Variants",
    "basicUsageCheckbox": "Basic Usage",
    "basicCheckbox": "Basic Checkbox",
    "propsCheckbox": "Props",
    "accessibilityCheckbox": "Accessibility",
    "designGuidelinesCheckbox": "Design Guidelines",
    "checkboxesHaveProperLabels": "Checkboxes have proper labels and associations",
    "screenReadersCanIdentifyCheckboxStates": "Screen readers can identify checkbox states",
    "keyboardNavigationSupportedCheckbox": "Keyboard navigation is supported",
    "focusManagementHandledCorrectly": "Focus management is handled correctly",
    "alwaysProvideClearLabels": "Always provide clear labels",
    "useConsistentSizingAcrossApplication": "Use consistent sizing across your application",
    "provideClearVisualFeedback": "Provide clear visual feedback for all states",
    "groupRelatedCheckboxesTogether": "Group related checkboxes together",
    "ensureSufficientTouchTargetsOnMobileCheckbox": "Ensure sufficient touch targets on mobile",
    "dataTableComponent": "DataTable Component",
    "dataTableDescription": "The DataTable component provides an advanced table with sorting, selection, and interactive features. It's perfect for displaying complex data with user interactions.",
    "dataTableIntroduction": "Introduction",
    "dataTableIntroDesc": "The DataTable component includes several complementary features to handle various data display and interaction scenarios:",
    "dataTableMainWrapper": "DataTable: the main wrapper for creating advanced tables with interactive functionality and data management.",
    "dataTableSorting": "DataTable Sorting: built-in column sorting capabilities with visual indicators and direction controls.",
    "dataTableSelection": "DataTable Selection: row selection functionality with individual and bulk selection support for data operations.",
    "dataTablePagination": "DataTable Pagination: integrated pagination controls for handling large datasets efficiently.",
    "dataTableCustomization": "DataTable Customization: flexible column rendering, styling, and responsive design options.",
    "dataTableAccessibility": "DataTable Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support.",
    "whenToUseDataTable": "When to use",
    "displayingLargeDatasetsWithInteractiveFeatures": "Displaying large datasets with interactive features",
    "tablesThatNeedSortingAndFiltering": "Tables that need sorting and filtering",
    "dataThatRequiresSelectionOrBulkActions": "Data that requires selection or bulk actions",
    "complexDataGridsWithMultipleColumns": "Complex data grids with multiple columns",
    "administrativeInterfacesAndDashboards": "Administrative interfaces and dashboards",
    "usageDataTable": "Usage",
    "variantsDataTable": "Variants",
    "someExampleDataTable": "Some Example",
    "allDataTableVariants": "All DataTable Variants",
    "withSelection": "With Selection",
    "dataTableWithSelection": "DataTable with Selection",
    "withPagination": "With Pagination",
    "dataTableWithPagination": "DataTable with Pagination",
    "propsDataTable": "Props",
    "accessibilityDataTable": "Accessibility",
    "designGuidelinesDataTable": "Design Guidelines",
    "dataTableHasProperSemanticStructure": "DataTable has proper semantic structure",
    "screenReadersCanNavigateTableContent": "Screen readers can navigate table content",
    "keyboardNavigationSupportedDataTable": "Keyboard navigation is supported",
    "selectionStatesAreAnnounced": "Selection states are announced",
    "sortControlsAreAccessible": "Sort controls are accessible",
    "useClearAndDescriptiveColumnHeaders": "Use clear and descriptive column headers",
    "keepTheNumberOfColumnsReasonable": "Keep the number of columns reasonable",
    "provideClearVisualFeedbackForInteractions": "Provide clear visual feedback for interactions",
    "ensureSufficientContrastForReadability": "Ensure sufficient contrast for readability",
    "dialogComponent": "Dialog Component",
    "dialogDescription": "The Dialog component provides a modal dialog interface for displaying content that requires user interaction. It includes overlay, content, header, body, and footer sections with customizable styling and accessibility features.",
    "dialogIntroduction": "Introduction",
    "dialogIntroDesc": "The Dialog component includes several complementary features to handle various modal and overlay interaction scenarios:",
    "dialogMainWrapper": "Dialog: the main wrapper for creating modal dialogs with overlay and content management.",
    "dialogContent": "Dialog Content: structured content areas with header, body, and footer sections for organized layouts.",
    "dialogTriggers": "Dialog Triggers: flexible trigger elements that can open dialogs with customizable interaction patterns.",
    "dialogStateManagement": "Dialog State Management: controlled and uncontrolled state handling with open/close functionality.",
    "dialogCustomization": "Dialog Customization: flexible sizing, positioning, and styling options for different design needs.",
    "dialogAccessibility": "Dialog Accessibility: proper ARIA attributes, focus management, and keyboard navigation support.",
    "whenToUseDialog": "When to use",
    "displayConfirmationMessages": "Display confirmation messages",
    "showFormsOrInputFields": "Show forms or input fields",
    "presentImportantInformation": "Present important information",
    "getUserConfirmationForDestructiveActions": "Get user confirmation for destructive actions",
    "displayDetailedContentThatNeedsFocus": "Display detailed content that needs focus",
    "usageDialog": "Usage",
    "basicExampleDialog": "Basic Example",
    "basicDialogWithForm": "Basic Dialog with Form",
    "customStyling": "Custom Styling",
    "customStyledDialog": "Custom Styled Dialog",
    "propsDialog": "Props",
    "dialogProps": "Dialog Props",
    "dialogTriggerProps": "DialogTrigger Props",
    "dialogContentProps": "DialogContent Props",
    "dialogHeaderProps": "DialogHeader Props",
    "dialogTitleProps": "DialogTitle Props",
    "dialogDescriptionProps": "DialogDescription Props",
    "dialogBodyProps": "DialogBody Props",
    "dialogFooterProps": "DialogFooter Props",
    "accessibilityDialog": "Accessibility",
    "designGuidelinesDialog": "Design Guidelines",
    "dialogsAreBuiltWithProperAriaAttributes": "Dialogs are built with proper ARIA attributes",
    "focusManagementIsHandledAutomatically": "Focus management is handled automatically",
    "escapeKeyClosesTheDialog": "Escape key closes the dialog",
    "clickingOutsideClosesTheDialog": "Clicking outside closes the dialog",
    "screenReadersCanProperlyAnnounceDialogContent": "Screen readers can properly announce dialog content",
    "focusIsTrappedWithinTheDialogWhenOpen": "Focus is trapped within the dialog when open",
    "useDialogsSparinglyForImportantInteractions": "Use dialogs sparingly for important interactions",
    "keepDialogContentConciseAndFocused": "Keep dialog content concise and focused",
    "provideClearActionButtonsInTheFooter": "Provide clear action buttons in the footer",
    "useAppropriateDialogTitlesAndDescriptions": "Use appropriate dialog titles and descriptions",
    "considerMobileResponsivenessForDialogSizing": "Consider mobile responsiveness for dialog sizing",
    "ensureSufficientContrastForReadabilityDialog": "Ensure sufficient contrast for readability",
    "drawerComponent": "Drawer Component",
    "drawerDescription": "The Drawer component provides a slide-up modal interface for displaying content that requires user interaction. It appears from the bottom of the screen and includes overlay, content, header, body, and footer sections with customizable styling and accessibility features.",
    "drawerIntroduction": "Introduction",
    "drawerIntroDesc": "The Drawer component includes several complementary features to handle various mobile-friendly modal and overlay interaction scenarios:",
    "drawerMainWrapper": "Drawer: the main wrapper for creating slide-up modal interfaces with overlay and content management.",
    "drawerContent": "Drawer Content: structured content areas with header, body, and footer sections optimized for mobile layouts.",
    "drawerTriggers": "Drawer Triggers: flexible trigger elements that can open drawers with customizable interaction patterns.",
    "drawerAnimations": "Drawer Animations: smooth slide-up animations and transitions for enhanced user experience.",
    "drawerCustomization": "Drawer Customization: flexible sizing, positioning, and styling options for different mobile design needs.",
    "drawerAccessibility": "Drawer Accessibility: proper ARIA attributes, focus management, and touch-friendly navigation support.",
    "whenToUseDrawer": "When to use",
    "displayConfirmationMessagesDrawer": "Display confirmation messages",
    "showFormsOrInputFieldsDrawer": "Show forms or input fields",
    "presentImportantInformationDrawer": "Present important information",
    "getUserConfirmationForDestructiveActionsDrawer": "Get user confirmation for destructive actions",
    "displayDetailedContentThatNeedsFocusDrawer": "Display detailed content that needs focus",
    "mobileFriendlyModalAlternative": "Mobile-friendly modal alternative",
    "usageDrawer": "Usage",
    "basicExampleDrawer": "Basic Example",
    "basicDrawerWithForm": "Basic Drawer with Form",
    "propsDrawer": "Props",
    "drawerProps": "Drawer Props",
    "drawerTriggerProps": "DrawerTrigger Props",
    "drawerContentProps": "DrawerContent Props",
    "drawerHeaderProps": "DrawerHeader Props",
    "drawerTitleProps": "DrawerTitle Props",
    "drawerDescriptionProps": "DrawerDescription Props",
    "drawerBodyProps": "DrawerBody Props",
    "drawerFooterProps": "DrawerFooter Props",
    "accessibilityDrawer": "Accessibility",
    "designGuidelinesDrawer": "Design Guidelines",
    "drawersAreBuiltWithProperAriaAttributes": "Drawers are built with proper ARIA attributes",
    "focusManagementIsHandledAutomaticallyDrawer": "Focus management is handled automatically",
    "escapeKeyClosesTheDrawer": "Escape key closes the drawer",
    "clickingOutsideClosesTheDrawer": "Clicking outside closes the drawer",
    "screenReadersCanProperlyAnnounceDrawerContent": "Screen readers can properly announce drawer content",
    "focusIsTrappedWithinTheDrawerWhenOpen": "Focus is trapped within the drawer when open",
    "useDrawersForMobileFriendlyModals": "Use drawers for mobile-friendly modals",
    "keepDrawerContentConciseAndFocused": "Keep drawer content concise and focused",
    "provideClearActionButtonsInTheFooterDrawer": "Provide clear action buttons in the footer",
    "useAppropriateDrawerTitlesAndDescriptions": "Use appropriate drawer titles and descriptions",
    "considerMobileResponsivenessForDrawerSizing": "Consider mobile responsiveness for drawer sizing",
    "ensureSufficientContrastForReadabilityDrawer": "Ensure sufficient contrast for readability",
    "formComponent": "Form Component",
    "formDescription": "The Form component provides a comprehensive set of form controls and validation for user data collection. It includes input fields, validation, and submission handling.",
    "formIntroduction": "Introduction",
    "formIntroDesc": "The Form component includes several complementary features to handle various data collection and user input scenarios:",
    "formMainWrapper": "Form: the main wrapper for creating comprehensive data collection interfaces with validation and submission handling.",
    "formValidation": "Form Validation: built-in validation system with error handling, real-time feedback, and custom validation rules.",
    "formControls": "Form Controls: comprehensive set of input components (Input, Textarea, Select, Checkbox, Radio, Switch) for different data types.",
    "formStateManagement": "Form State Management: controlled and uncontrolled state handling with form data persistence and reset functionality.",
    "formAccessibility": "Form Accessibility: proper labels, error announcements, keyboard navigation, and screen reader support.",
    "formCustomization": "Form Customization: flexible styling, layout options, and integration with external form libraries.",
    "whenToUseForm": "When to use",
    "collectingUserInformation": "Collecting user information",
    "userRegistrationAndLogin": "User registration and login",
    "settingsAndConfigurationForms": "Settings and configuration forms",
    "dataEntryAndEditing": "Data entry and editing",
    "surveyAndFeedbackForms": "Survey and feedback forms",
    "usageForm": "Usage",
    "variantsForm": "Variants",
    "someExampleForm": "Some Example",
    "allFormVariants": "All Form Variants",
    "withValidationForm": "With Validation",
    "formWithValidation": "Form with Validation",
    "withDifferentInputTypesForm": "With Different Input Types",
    "formWithVariousInputs": "Form with Various Inputs",
    "formsAreBuiltUsingIndividualComponents": "Forms are built using individual components from the design system. Here are the main components used in forms:",
    "inputComponents": "Input Components",
    "inputTextEmailPasswordAndNumberInputs": "Input - Text, email, password, and number inputs",
    "textareaMultiLineTextInput": "Textarea - Multi-line text input",
    "selectDropdownSelection": "Select - Dropdown selection",
    "checkboxBinaryChoiceControls": "Checkbox - Binary choice controls",
    "radioSingleChoiceFromMultipleOptions": "Radio - Single choice from multiple options",
    "switchToggleControls": "Switch - Toggle controls",
    "formActions": "Form Actions",
    "buttonSubmitAndActionButtons": "Button - Submit and action buttons",
    "eachComponentHasItsOwnProps": "Each component has its own props and documentation. See the individual component pages for detailed prop information.",
    "accessibilityForm": "Accessibility",
    "designGuidelinesForm": "Design Guidelines",
    "formsHaveProperSemanticStructure": "Forms have proper semantic structure",
    "allInputsHaveAssociatedLabels": "All inputs have associated labels",
    "errorMessagesAreAnnouncedToScreenReaders": "Error messages are announced to screen readers",
    "keyboardNavigationIsSupported": "Keyboard navigation is supported",
    "focusManagementIsHandledCorrectly": "Focus management is handled correctly",
    "useClearAndDescriptiveLabels": "Use clear and descriptive labels",
    "provideHelpfulPlaceholderText": "Provide helpful placeholder text",
    "showValidationErrorsClearly": "Show validation errors clearly",
    "useConsistentSpacingAndLayout": "Use consistent spacing and layout",
    "inputComponent": "Input Component",
    "inputDescription": "The Input component provides text input fields for user data entry with various types, validation states, and interactive features.",
    "inputIntroduction": "Introduction",
    "inputIntroDesc": "The Input component includes several complementary features to handle various text input and data entry scenarios:",
    "inputMainWrapper": "Input: the main wrapper for creating text input fields with different types and validation states.",
    "inputTypesIntro": "Input Types: support for various input types (text, email, password, number, tel, url) with appropriate validation.",
    "inputValidation": "Input Validation: built-in validation states with error messages, success indicators, and real-time feedback.",
    "inputAccessibility": "Input Accessibility: proper labels, help text, error announcements, and keyboard navigation support.",
    "inputCustomization": "Input Customization: flexible sizing, styling, placeholder text, and integration with form libraries.",
    "inputStates": "Input States: support for disabled, readonly, and interactive states with appropriate visual feedback.",
    "whenToUseInput": "When to use",
    "collectingTextInputFromUsers": "Collecting text input from users",
    "formFieldsForDataEntry": "Form fields for data entry",
    "searchInputs": "Search inputs",
    "emailPasswordAndOtherSpecificInputTypes": "Email, password, and other specific input types",
    "userRegistrationAndLoginForms": "User registration and login forms",
    "whenNotToUseInput": "When not to use",
    "forMultiLineTextUseTextareaInstead": "For multi-line text (use Textarea instead)",
    "forSelectingFromOptionsUseSelectInstead": "For selecting from options (use Select instead)",
    "forBinaryChoicesUseCheckboxOrRadioInstead": "For binary choices (use Checkbox or Radio instead)",
    "usageInput": "Usage",
    "variantsInput": "Variants",
    "someVariantsExampleInput": "Some Variants Example",
    "allInputVariants": "All Input Variants",
    "basicUsageInput": "Basic Usage",
    "basicInput": "Basic Input",
    "withDifferentTypesInput": "With Different Types",
    "inputTypes": "Input Types",
    "withValidationStatesInput": "With Validation States",
    "inputWithValidation": "Input with Validation",
    "propsInput": "Props",
    "textareaProps": "Textarea Props",
    "selectProps": "Select Props",
    "accessibilityInput": "Accessibility",
    "designGuidelinesInput": "Design Guidelines",
    "inputsHaveProperLabelsAndAssociations": "Inputs have proper labels and associations",
    "errorMessagesAreAnnouncedToScreenReadersInput": "Error messages are announced to screen readers",
    "focusManagementIsHandledCorrectlyInput": "Focus management is handled correctly",
    "keyboardNavigationIsSupportedInput": "Keyboard navigation is supported",
    "colorContrastMeetsWcagGuidelines": "Color contrast meets WCAG guidelines",
    "useAppropriateInputTypesForBetterUx": "Use appropriate input types for better UX",
    "provideHelpfulPlaceholderTextInput": "Provide helpful placeholder text",
    "showValidationErrorsClearlyInput": "Show validation errors clearly",
    "ensureSufficientTouchTargetsOnMobileInput": "Ensure sufficient touch targets on mobile",
    "modalComponent": "Modal Component",
    "modalDescription": "The Modal component provides overlay dialogs for displaying important information, forms, or interactive content that requires user attention.",
    "modalIntroduction": "Introduction",
    "modalIntroDesc": "The Modal component includes several complementary features to handle various overlay and focused interaction scenarios:",
    "modalMainWrapper": "Modal: the main wrapper for creating overlay dialogs with backdrop and content management.",
    "modalContent": "Modal Content: structured content areas with header, body, and footer sections for organized layouts.",
    "modalStateManagement": "Modal State Management: controlled open/close state handling with backdrop click and escape key support.",
    "modalSizing": "Modal Sizing: multiple size options (sm, md, lg, xl) to accommodate different content types and screen sizes.",
    "modalCustomization": "Modal Customization: flexible styling, positioning, and animation options for different design needs.",
    "modalAccessibility": "Modal Accessibility: proper ARIA attributes, focus management, keyboard navigation, and screen reader support.",
    "whenToUseModal": "When to use",
    "displayImportantInformationOrConfirmations": "Display important information or confirmations",
    "showFormsThatNeedFocusedAttention": "Show forms that need focused attention",
    "displayDetailedContentWithoutNavigation": "Display detailed content without navigation",
    "confirmDestructiveActions": "Confirm destructive actions",
    "showImageGalleriesOrMedia": "Show image galleries or media",
    "usageModal": "Usage",
    "basicExampleModal": "Basic Example",
    "basicModal": "Basic Modal",
    "formModal": "Form Modal",
    "modalWithForm": "Modal with Form",
    "propsModal": "Props",
    "accessibilityModal": "Accessibility",
    "designGuidelinesModal": "Design Guidelines",
    "modalsHaveProperAriaAttributes": "Modals have proper ARIA attributes",
    "focusManagementIsHandledAutomaticallyModal": "Focus management is handled automatically",
    "escapeKeyClosesTheModal": "Escape key closes the modal",
    "clickingOutsideClosesTheModal": "Clicking outside closes the modal",
    "screenReadersCanProperlyAnnounceModalContent": "Screen readers can properly announce modal content",
    "focusIsTrappedWithinTheModalWhenOpen": "Focus is trapped within the modal when open",
    "useModalsSparinglyForImportantInteractions": "Use modals sparingly for important interactions",
    "keepModalContentConciseAndFocused": "Keep modal content concise and focused",
    "provideClearActionButtonsInTheFooterModal": "Provide clear action buttons in the footer",
    "useAppropriateModalTitlesAndDescriptions": "Use appropriate modal titles and descriptions",
    "considerMobileResponsivenessForModalSizing": "Consider mobile responsiveness for modal sizing",
    "ensureSufficientContrastForReadabilityModal": "Ensure sufficient contrast for readability",
    "navigationComponent": "Navigation Component",
    "navigationDescription": "The Navigation component provides horizontal navigation bars for site-wide navigation. It helps users navigate between different sections and pages of your application.",
    "navigationIntroduction": "Introduction",
    "navigationIntroDesc": "The Navigation component includes several complementary features to handle various site navigation and user flow scenarios:",
    "navigationMainWrapper": "Navigation: the main wrapper for creating horizontal navigation bars with brand elements and menu items.",
    "navigationItems": "Navigation Items: individual menu items with active states, links, and customizable styling for different sections.",
    "navigationBranding": "Navigation Branding: flexible brand/logo area with customizable content and positioning options.",
    "navigationResponsiveness": "Navigation Responsiveness: mobile-friendly navigation with collapsible menus and touch-optimized interactions.",
    "navigationStates": "Navigation States: active page indication, hover effects, and visual feedback for current location.",
    "navigationAccessibility": "Navigation Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support.",
    "whenToUseNavigation": "When to use",
    "mainSiteNavigation": "Main site navigation",
    "sectionNavigationWithinAnApp": "Section navigation within an app",
    "primaryNavigationMenus": "Primary navigation menus",
    "headerNavigationBars": "Header navigation bars",
    "topLevelPageNavigation": "Top-level page navigation",
    "usageNavigation": "Usage",
    "variantsNavigation": "Variants",
    "basicNavigation": "Basic Navigation",
    "propsNavigation": "Props",
    "navItemInterface": "NavItem Interface",
    "accessibilityNavigation": "Accessibility",
    "designGuidelinesNavigation": "Design Guidelines",
    "navigationHasProperSemanticStructure": "Navigation has proper semantic structure",
    "screenReadersCanNavigateMenuItems": "Screen readers can navigate menu items",
    "keyboardNavigationIsSupportedNavigation": "Keyboard navigation is supported",
    "focusManagementIsHandledCorrectlyNavigation": "Focus management is handled correctly",
    "properAriaAttributesAreApplied": "Proper ARIA attributes are applied",
    "useClearAndDescriptiveNavigationLabels": "Use clear and descriptive navigation labels",
    "keepTheNumberOfTopLevelItemsReasonable": "Keep the number of top-level items reasonable",
    "provideClearVisualFeedbackForActiveStates": "Provide clear visual feedback for active states",
    "ensureSufficientTouchTargetsOnMobileNavigation": "Ensure sufficient touch targets on mobile",
    "useConsistentStylingAcrossYourApplication": "Use consistent styling across your application",
    "paginationComponent": "Pagination Component",
    "paginationDescription": "The Pagination component provides navigation controls for moving through multiple pages of content. It helps users navigate large datasets efficiently.",
    "paginationIntroduction": "Introduction",
    "paginationIntroDesc": "The Pagination component includes several complementary features to handle various data navigation and page management scenarios:",
    "paginationMainWrapper": "Pagination: the main wrapper for creating page navigation controls with current page indication and navigation buttons.",
    "paginationControls": "Pagination Controls: first, previous, next, and last page buttons with appropriate disabled states and visual feedback.",
    "paginationDisplay": "Pagination Display: current page indicators, page numbers, and total page information for user orientation.",
    "paginationCustomization": "Pagination Customization: flexible styling, button visibility options, and integration with different data sources.",
    "paginationResponsiveness": "Pagination Responsiveness: mobile-friendly navigation with appropriate touch targets and compact layouts.",
    "paginationAccessibility": "Pagination Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for page navigation.",
    "whenToUsePagination": "When to use",
    "navigateThroughLargeListsOrDatasets": "Navigate through large lists or datasets",
    "displaySearchResultsAcrossMultiplePages": "Display search results across multiple pages",
    "browseThroughContentCollections": "Browse through content collections",
    "navigateDataTablesWithManyRows": "Navigate data tables with many rows",
    "showContentInManageableChunks": "Show content in manageable chunks",
    "usagePagination": "Usage",
    "variantsPagination": "Variants",
    "basicPagination": "Basic Pagination",
    "withJumpToPagePagination": "With Jump to Page",
    "paginationWithJump": "Pagination with Jump",
    "propsPagination": "Props",
    "accessibilityPagination": "Accessibility",
    "designGuidelinesPagination": "Design Guidelines",
    "paginationControlsAreKeyboardAccessible": "Pagination controls are keyboard accessible",
    "screenReadersCanIdentifyCurrentPage": "Screen readers can identify current page",
    "navigationButtonsHaveProperLabels": "Navigation buttons have proper labels",
    "focusManagementIsHandledCorrectlyPagination": "Focus management is handled correctly",
    "properAriaAttributesAreAppliedPagination": "Proper ARIA attributes are applied",
    "useClearAndIntuitiveNavigationControls": "Use clear and intuitive navigation controls",
    "showCurrentPageClearly": "Show current page clearly",
    "provideFirstLastPageButtonsForLargeDatasets": "Provide first/last page buttons for large datasets",
    "useConsistentStylingAcrossYourApplicationPagination": "Use consistent styling across your application",
    "considerMobileTouchTargets": "Consider mobile touch targets",
    "popoverComponent": "Popover Component",
    "popoverDescription": "The Popover component provides floating panels that appear on click for additional content and actions. It's perfect for displaying contextual information without navigating away.",
    "popoverIntroduction": "Introduction",
    "popoverIntroDesc": "The Popover component includes several complementary features to handle various floating panel and contextual interaction scenarios:",
    "popoverMainWrapper": "Popover: the main wrapper for creating floating panels with trigger elements and content management.",
    "popoverPositioning": "Popover Positioning: flexible positioning system with multiple placement options (top, bottom, left, right) and smart positioning.",
    "popoverTriggers": "Popover Triggers: customizable trigger elements with click, hover, and focus interactions for different use cases.",
    "popoverContent": "Popover Content: structured content areas with titles, actions, and complex layouts for various information display needs.",
    "popoverStateManagement": "Popover State Management: controlled open/close state handling with click outside and escape key support.",
    "popoverAccessibility": "Popover Accessibility: proper ARIA attributes, focus management, keyboard navigation, and screen reader support.",
    "whenToUsePopover": "When to use",
    "displayAdditionalContentOnDemand": "Display additional content on demand",
    "showContextualActionsOrMenus": "Show contextual actions or menus",
    "provideDetailedInformationAboutElements": "Provide detailed information about elements",
    "createInteractiveOverlays": "Create interactive overlays",
    "displayFormsOrComplexContent": "Display forms or complex content",
    "usagePopover": "Usage",
    "variantsPopover": "Variants",
    "interactivePopover": "Interactive Popover",
    "propsPopover": "Props",
    "accessibilityPopover": "Accessibility",
    "designGuidelinesPopover": "Design Guidelines",
    "popoversHaveProperFocusManagement": "Popovers have proper focus management",
    "screenReadersCanAccessPopoverContent": "Screen readers can access popover content",
    "keyboardNavigationIsSupportedPopover": "Keyboard navigation is supported",
    "escapeKeyClosesThePopover": "Escape key closes the popover",
    "properAriaAttributesAreAppliedPopover": "Proper ARIA attributes are applied",
    "keepPopoverContentFocusedAndConcise": "Keep popover content focused and concise",
    "useAppropriatePositioningToAvoidClipping": "Use appropriate positioning to avoid clipping",
    "ensureSufficientContrastForReadabilityPopover": "Ensure sufficient contrast for readability",
    "considerMobileTouchInteractions": "Consider mobile touch interactions",
    "radioComponent": "Radio Component",
    "radioDescription": "The Radio component provides single-choice controls for selecting one option from a group. It's perfect for forms that require exclusive selection.",
    "radioIntroduction": "Introduction",
    "radioIntroDesc": "The Radio component includes several complementary features to handle various single-choice selection scenarios:",
    "radioMainWrapper": "Radio: the main wrapper for creating single-choice selection controls with mutually exclusive options.",
    "radioGroups": "Radio Groups: automatic grouping functionality that ensures only one option can be selected at a time.",
    "radioStates": "Radio States: multiple interaction states (checked, unchecked, disabled) with clear visual feedback.",
    "radioValidation": "Radio Validation: built-in validation support with error messages and form integration capabilities.",
    "radioAccessibility": "Radio Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for form controls.",
    "radioCustomization": "Radio Customization: flexible sizing, styling, and labeling options for different design contexts.",
    "whenToUseRadio": "When to use",
    "singleSelectionFromMultipleOptions": "Single selection from multiple options",
    "choosingOneOptionFromAGroup": "Choosing one option from a group",
    "settingsWithMutuallyExclusiveChoices": "Settings with mutually exclusive choices",
    "formFieldsWithLimitedExclusiveOptions": "Form fields with limited, exclusive options",
    "surveyQuestionsWithSingleAnswers": "Survey questions with single answers",
    "usageRadio": "Usage",
    "variantsRadio": "Variants",
    "withDefaultSelectionRadio": "With Default Selection",
    "radioWithDefaultSelection": "Radio with Default Selection",
    "propsRadio": "Props",
    "accessibilityRadio": "Accessibility",
    "designGuidelinesRadio": "Design Guidelines",
    "radioButtonsHaveProperLabelsAndAssociations": "Radio buttons have proper labels and associations",
    "screenReadersCanIdentifyRadioButtonStates": "Screen readers can identify radio button states",
    "keyboardNavigationIsSupportedRadio": "Keyboard navigation is supported",
    "focusManagementIsHandledCorrectlyRadio": "Focus management is handled correctly",
    "properAriaAttributesAreAppliedRadio": "Proper ARIA attributes are applied",
    "useConsistentSizingAcrossYourApplicationRadio": "Use consistent sizing across your application",
    "groupRelatedRadioButtonsTogether": "Group related radio buttons together",
    "provideClearVisualFeedbackForSelection": "Provide clear visual feedback for selection",
    "ensureSufficientTouchTargetsOnMobileRadio": "Ensure sufficient touch targets on mobile",
    "scrollAreaComponent": "ScrollArea Component",
    "scrollAreaDescription": "The ScrollArea component provides customizable scrollable areas with different scrollbar sizes and styles. It's perfect for creating smooth scrolling experiences.",
    "scrollAreaIntroduction": "Introduction",
    "scrollAreaIntroDesc": "The ScrollArea component includes several complementary features to handle various scrolling and content overflow scenarios:",
    "scrollAreaMainWrapper": "ScrollArea: the main wrapper for creating enhanced scrollable areas with customizable scrollbars and smooth behavior.",
    "scrollAreaSizing": "ScrollArea Sizing: multiple scrollbar size options (sm, md, lg) to fit different design contexts and user preferences.",
    "scrollAreaOrientation": "ScrollArea Orientation: support for both vertical and horizontal scrolling with appropriate scrollbar positioning.",
    "scrollAreaCustomization": "ScrollArea Customization: flexible styling, colors, and appearance options for brand-specific scrollbar designs.",
    "scrollAreaPerformance": "ScrollArea Performance: optimized scrolling behavior with smooth animations and efficient content rendering.",
    "scrollAreaAccessibility": "ScrollArea Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for scrollable content.",
    "whenToUseScrollArea": "When to use",
    "createScrollableContentAreas": "Create scrollable content areas",
    "customizeScrollbarAppearance": "Customize scrollbar appearance",
    "implementSmoothScrolling": "Implement smooth scrolling",
    "handleOverflowContentGracefully": "Handle overflow content gracefully",
    "createConsistentScrollingExperiences": "Create consistent scrolling experiences",
    "usageScrollArea": "Usage",
    "variantsScrollArea": "Variants",
    "scrollExamples": "Scroll Examples",
    "verticalScroll": "Vertical Scroll",
    "horizontalScroll": "Horizontal Scroll",
    "propsScrollArea": "Props",
    "accessibilityScrollArea": "Accessibility",
    "designGuidelinesScrollArea": "Design Guidelines",
    "scrollAreaMaintainsKeyboardNavigation": "ScrollArea maintains keyboard navigation",
    "screenReadersCanAccessScrollableContent": "Screen readers can access scrollable content",
    "focusManagementIsHandledCorrectlyScrollArea": "Focus management is handled correctly",
    "properAriaAttributesAreAppliedScrollArea": "Proper ARIA attributes are applied",
    "scrollPositionIsAnnouncedWhenNeeded": "Scroll position is announced when needed",
    "useAppropriateSizingForYourContent": "Use appropriate sizing for your content",
    "ensureSufficientContrastForScrollbars": "Ensure sufficient contrast for scrollbars",
    "considerMobileTouchInteractionsScrollArea": "Consider mobile touch interactions",
    "useConsistentStylingAcrossYourApplicationScrollArea": "Use consistent styling across your application",
    "testScrollingBehaviorOnDifferentDevices": "Test scrolling behavior on different devices",
    "selectComponent": "Select Component",
    "selectDescription": "The Select component provides dropdown selection menus for choosing from predefined options. It's perfect for forms that require users to select from a list of choices.",
    "selectIntroduction": "Introduction",
    "selectIntroDesc": "The Select component includes several complementary features to handle various dropdown selection scenarios:",
    "selectMainWrapper": "Select: the main wrapper for creating dropdown selection menus with predefined options and clean interfaces.",
    "selectOptions": "Select Options: flexible option management with value/label pairs, grouping, and dynamic option loading.",
    "selectValidation": "Select Validation: built-in validation support with error messages, success states, and form integration.",
    "selectAccessibility": "Select Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for dropdown controls.",
    "selectCustomization": "Select Customization: flexible sizing, styling, and appearance options for different design contexts.",
    "selectStates": "Select States: support for disabled, loading, and interactive states with appropriate visual feedback.",
    "whenToUseSelect": "When to use",
    "choosingFromAListOfPredefinedOptions": "Choosing from a list of predefined options",
    "formFieldsWithLimitedChoices": "Form fields with limited choices",
    "countryStateOrCategorySelection": "Country, state, or category selection",
    "settingsAndConfigurationOptions": "Settings and configuration options",
    "filteringAndSortingOptions": "Filtering and sorting options",
    "usageSelect": "Usage",
    "variantsSelect": "Variants",
    "basicSelect": "Basic Select",
    "propsSelect": "Props",
    "accessibilitySelect": "Accessibility",
    "designGuidelinesSelect": "Design Guidelines",
    "selectsHaveProperLabelsAndAssociations": "Selects have proper labels and associations",
    "keyboardNavigationIsSupportedSelect": "Keyboard navigation is supported",
    "focusManagementIsHandledCorrectlySelect": "Focus management is handled correctly",
    "alwaysProvideClearLabelsSelect": "Always provide clear labels",
    "useDescriptiveOptionText": "Use descriptive option text",
    "groupRelatedOptionsTogether": "Group related options together",
    "provideADefaultPlaceholderOption": "Provide a default placeholder option",
    "ensureSufficientTouchTargetsOnMobileSelect": "Ensure sufficient touch targets on mobile",
    "sidebarComponent": "Sidebar Component",
    "sidebarDescription": "The Sidebar component provides vertical navigation panels for app layouts and navigation. It's perfect for creating consistent navigation experiences in web applications.",
    "sidebarIntroduction": "Introduction",
    "sidebarIntroDesc": "The Sidebar component includes several complementary features to handle various vertical navigation and layout scenarios:",
    "sidebarMainWrapper": "Sidebar: the main wrapper for creating vertical navigation panels with consistent access to application sections.",
    "sidebarStructure": "Sidebar Structure: organized layout with header, content, and footer sections for comprehensive navigation management.",
    "sidebarNavigation": "Sidebar Navigation: flexible menu system with items, icons, badges, and active state management for different sections.",
    "sidebarResponsiveness": "Sidebar Responsiveness: mobile-friendly navigation with collapsible menus and touch-optimized interactions.",
    "sidebarCustomization": "Sidebar Customization: flexible width, colors, styling, and user profile integration for different design needs.",
    "sidebarAccessibility": "Sidebar Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for navigation panels.",
    "whenToUseSidebar": "When to use",
    "mainApplicationNavigation": "Main application navigation",
    "dashboardLayouts": "Dashboard layouts",
    "adminInterfaces": "Admin interfaces",
    "multiSectionApplications": "Multi-section applications",
    "desktopFocusedApplications": "Desktop-focused applications",
    "usageSidebar": "Usage",
    "basicExampleSidebar": "Basic Example",
    "basicSidebar": "Basic Sidebar",
    "sidebarWithIcons": "Sidebar with Icons",
    "collapsibleSidebar": "Collapsible Sidebar",
    "sidebarWithUserProfile": "Sidebar with User Profile",
    "sidebarWithFooter": "Sidebar with Footer",
    "responsiveSidebar": "Responsive Sidebar",
    "propsSidebar": "Props",
    "sidebarItemProps": "SidebarItem Props",
    "userProfileInterface": "UserProfile Interface",
    "sidebarHeaderProps": "SidebarHeader Props",
    "sidebarContentProps": "SidebarContent Props",
    "sidebarFooterProps": "SidebarFooter Props",
    "sidebarMainContentProps": "SidebarMainContent Props",
    "accessibilitySidebar": "Accessibility",
    "designGuidelinesSidebar": "Design Guidelines",
    "sidebarHasProperSemanticStructure": "Sidebar has proper semantic structure",
    "screenReadersCanNavigateMenuItemsSidebar": "Screen readers can navigate menu items",
    "keyboardNavigationIsSupportedSidebar": "Keyboard navigation is supported",
    "focusManagementIsHandledCorrectlySidebar": "Focus management is handled correctly",
    "properAriaAttributesAreAppliedSidebar": "Proper ARIA attributes are applied",
    "useClearAndDescriptiveNavigationLabelsSidebar": "Use clear and descriptive navigation labels",
    "keepTheNumberOfTopLevelItemsReasonableSidebar": "Keep the number of top-level items reasonable",
    "provideClearVisualFeedbackForActiveStatesSidebar": "Provide clear visual feedback for active states",
    "useConsistentIconsAndStyling": "Use consistent icons and styling",
    "considerMobileResponsivenessSidebar": "Consider mobile responsiveness",
    "switchComponent": "Switch Component",
    "switchDescription": "The Switch component provides toggle switches for binary on/off states and settings. It's perfect for enabling or disabling features with immediate visual feedback.",
    "switchIntroduction": "Introduction",
    "switchIntroDesc": "The Switch component includes several complementary features to handle various toggle and binary state scenarios:",
    "switchMainWrapper": "Switch: the main wrapper for creating toggle controls that enable or disable features with immediate visual feedback.",
    "switchStates": "Switch States: multiple interaction states (on, off, disabled) with clear visual indicators and smooth transitions.",
    "switchValidation": "Switch Validation: built-in validation support with error messages, help text, and form integration capabilities.",
    "switchAccessibility": "Switch Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for toggle controls.",
    "switchCustomization": "Switch Customization: flexible sizing, styling, and appearance options for different design contexts and brand needs.",
    "switchIntegration": "Switch Integration: seamless form integration with controlled and uncontrolled state management for various use cases.",
    "whenToUseSwitch": "When to use",
    "binaryOnOffStates": "Binary on/off states",
    "quickTogglesForOptions": "Quick toggles for options",
    "mobileFriendlyControls": "Mobile-friendly controls",
    "whenNotToUseSwitch": "When not to use",
    "forMultipleSelectionsUseCheckboxInstead": "For multiple selections (use Checkbox instead)",
    "forSingleChoiceFromMultipleOptionsUseRadioInstead": "For single choice from multiple options (use Radio instead)",
    "forPrimaryActionsUseButtonInstead": "For primary actions (use Button instead)",
    "whenYouNeedToShowIntermediateStates": "When you need to show intermediate states",
    "usageSwitch": "Usage",
    "variantsSwitch": "Variants",
    "withDisabledState": "With Disabled State",
    "disabledSwitch": "Disabled Switch",
    "propsSwitch": "Props",
    "accessibilitySwitch": "Accessibility",
    "designGuidelinesSwitch": "Design Guidelines",
    "switchesHaveProperLabelsAndAssociations": "Switches have proper labels and associations",
    "screenReadersCanIdentifySwitchStates": "Screen readers can identify switch states",
    "keyboardNavigationIsSupportedSwitch": "Keyboard navigation is supported",
    "focusManagementIsHandledCorrectlySwitch": "Focus management is handled correctly",
    "properAriaAttributesAreAppliedSwitch": "Proper ARIA attributes are applied",
    "alwaysProvideClearLabelsSwitch": "Always provide clear labels",
    "useConsistentSizingAcrossYourApplication": "Use consistent sizing across your application",
    "provideClearVisualFeedbackForAllStates": "Provide clear visual feedback for all states",
    "groupRelatedSwitchesTogether": "Group related switches together",
    "ensureSufficientTouchTargetsOnMobileSwitch": "Ensure sufficient touch targets on mobile",
    "tableComponent": "Table Component",
    "tableDescription": "The Table component provides a structured way to display data in rows and columns. It's perfect for presenting tabular data in a clean and organized format.",
    "tableIntroduction": "Introduction",
    "tableIntroDesc": "The Table component includes several complementary features to handle various data display and tabular presentation scenarios:",
    "tableMainWrapper": "Table: the main wrapper for creating structured data displays with rows, columns, and organized information presentation.",
    "tableStructure": "Table Structure: organized layout with header, body, and footer sections for comprehensive data organization and navigation.",
    "tableStyling": "Table Styling: flexible appearance options with striped rows, borders, hover effects, and responsive design for different contexts.",
    "tableInteractivity": "Table Interactivity: built-in sorting, selection, and click handling capabilities for enhanced user interaction with data.",
    "tableAccessibility": "Table Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for tabular data consumption.",
    "tableCustomization": "Table Customization: flexible sizing, styling, and integration options for different design contexts and data requirements.",
    "whenToUseTable": "When to use",
    "displayingStructuredDataInRowsAndColumns": "Displaying structured data in rows and columns",
    "showingComparisonData": "Showing comparison data",
    "presentingListsWithMultipleAttributes": "Presenting lists with multiple attributes",
    "displayingFinancialOrStatisticalData": "Displaying financial or statistical data",
    "creatingDataGrids": "Creating data grids",
    "usageTable": "Usage",
    "variantsTable": "Variants",
    "basicTable": "Basic Table",
    "propsTable": "Props",
    "tableHeaderProps": "TableHeader Props",
    "tableBodyProps": "TableBody Props",
    "tableRowProps": "TableRow Props",
    "tableHeaderCellProps": "TableHeaderCell Props",
    "tableCellProps": "TableCell Props",
    "dataTableProps": "DataTable Props",
    "accessibilityTable": "Accessibility",
    "designGuidelinesTable": "Design Guidelines",
    "tablesHaveProperSemanticStructure": "Tables have proper semantic structure",
    "columnHeadersAreProperlyAssociated": "Column headers are properly associated",
    "keyboardNavigationIsSupportedTable": "Keyboard navigation is supported",
    "tableCaptionsCanBeAddedForContext": "Table captions can be added for context",
    "keepTablesScannableWithProperSpacing": "Keep tables scannable with proper spacing",
    "useConsistentAlignmentForDataTypes": "Use consistent alignment for data types",
    "considerResponsiveDesignForMobile": "Consider responsive design for mobile",
    "useAlternatingRowColorsForBetterReadability": "Use alternating row colors for better readability",
    "tabsComponent": "Tabs Component",
    "tabsDescription": "The Tabs component organizes content into multiple panels with tab navigation. It provides a clean way to group related content and improve user experience.",
    "tabsIntroduction": "Introduction",
    "tabsIntroDesc": "The Tabs component includes several complementary features to handle various content organization and navigation scenarios:",
    "tabsMainWrapper": "Tabs: the main wrapper for creating tabbed interfaces that organize content into logical sections and improve navigation.",
    "tabNavigation": "Tab Navigation: flexible tab list with triggers, active states, and customizable styling for different content sections.",
    "tabContent": "Tab Content: organized content areas that show/hide based on active tab selection with smooth transitions.",
    "tabStateManagement": "Tab State Management: controlled and uncontrolled state handling with proper tab switching and content management.",
    "tabCustomization": "Tab Customization: flexible styling, sizing, and appearance options for different design contexts and brand needs.",
    "tabAccessibility": "Tab Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for tabbed interfaces.",
    "whenToUseTabs": "When to use",
    "organizingRelatedContentIntoSections": "Organizing related content into sections",
    "switchingBetweenDifferentViewsOrModes": "Switching between different views or modes",
    "groupingFormFieldsOrSettings": "Grouping form fields or settings",
    "displayingDifferentDataSets": "Displaying different data sets",
    "creatingWizardLikeInterfaces": "Creating wizard-like interfaces",
    "usageTabs": "Usage",
    "variantsTabs": "Variants",
    "allTabsVariants": "All Tabs Variants",
    "propsTabs": "Props",
    "tabListProps": "TabList Props",
    "tabTriggerProps": "TabTrigger Props",
    "tabContentProps": "TabContent Props",
    "accessibilityTabs": "Accessibility",
    "designGuidelinesTabs": "Design Guidelines",
    "tabsHaveProperAriaAttributes": "Tabs have proper ARIA attributes",
    "keyboardNavigationIsSupportedTabs": "Keyboard navigation is supported",
    "screenReadersCanIdentifyActiveTab": "Screen readers can identify active tab",
    "focusManagementIsHandledCorrectlyTabs": "Focus management is handled correctly",
    "tabContentIsProperlyAssociated": "Tab content is properly associated",
    "useClearAndDescriptiveTabLabels": "Use clear and descriptive tab labels",
    "keepTheNumberOfTabsReasonable": "Keep the number of tabs reasonable (3-5 tabs max)",
    "ensureTabContentIsRelatedAndMeaningful": "Ensure tab content is related and meaningful",
    "useConsistentStylingAcrossAllTabs": "Use consistent styling across all tabs",
    "considerMobileResponsivenessForTabNavigation": "Consider mobile responsiveness for tab navigation",
    "textareaComponent": "Textarea Component",
    "textareaDescription": "The Textarea component provides multi-line text input for longer content and messages. It's perfect for collecting detailed user input and comments.",
    "textareaIntroduction": "Introduction",
    "textareaIntroDesc": "The Textarea component includes several complementary features to handle various multi-line text input scenarios:",
    "textareaMainWrapper": "Textarea: the main wrapper for creating multi-line text input fields with larger input areas for longer content.",
    "textareaSizing": "Textarea Sizing: flexible sizing options with auto-resize capabilities and configurable min/max rows for different content needs.",
    "textareaValidation": "Textarea Validation: built-in validation support with error messages, success states, and form integration capabilities.",
    "textareaAccessibility": "Textarea Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for multi-line text inputs.",
    "textareaCustomization": "Textarea Customization: flexible styling, placeholder text, and appearance options for different design contexts.",
    "textareaStates": "Textarea States: support for disabled, readonly, and interactive states with appropriate visual feedback and user guidance.",
    "whenToUseTextarea": "When to use",
    "collectingLongerTextInput": "Collecting longer text input",
    "commentFormsAndFeedback": "Comment forms and feedback",
    "descriptionFields": "Description fields",
    "messageComposition": "Message composition",
    "multiLineContentEntry": "Multi-line content entry",
    "usageTextarea": "Usage",
    "variantsTextarea": "Variants",
    "basicTextarea": "Basic Textarea",
    "propsTextarea": "Props",
    "accessibilityTextarea": "Accessibility",
    "designGuidelinesTextarea": "Design Guidelines",
    "textareasHaveProperLabelsAndAssociations": "Textareas have proper labels and associations",
    "focusManagementIsHandledCorrectlyTextarea": "Focus management is handled correctly",
    "keyboardNavigationIsSupportedTextarea": "Keyboard navigation is supported",
    "alwaysProvideClearLabelsTextarea": "Always provide clear labels",
    "useAppropriatePlaceholderText": "Use appropriate placeholder text",
    "showCharacterLimitsWhenApplicable": "Show character limits when applicable",
    "provideClearValidationFeedback": "Provide clear validation feedback",
    "ensureSufficientTouchTargetsOnMobileTextarea": "Ensure sufficient touch targets on mobile",
    "tooltipComponent": "Tooltip Component",
    "tooltipDescription": "The Tooltip component provides contextual information that appears on hover or focus. It's perfect for providing additional details without cluttering the interface.",
    "tooltipIntroduction": "Introduction",
    "tooltipIntroDesc": "The Tooltip component includes several complementary features to handle various contextual information and user guidance scenarios:",
    "tooltipMainWrapper": "Tooltip: the main wrapper for creating contextual popup windows that provide additional information without cluttering the interface.",
    "tooltipPositioning": "Tooltip Positioning: flexible positioning system with multiple placement options (top, bottom, left, right) and smart positioning logic.",
    "tooltipTriggers": "Tooltip Triggers: hover and focus interactions with customizable trigger elements and timing controls for different use cases.",
    "tooltipContent": "Tooltip Content: support for rich content including text, HTML, and React components for comprehensive information display.",
    "tooltipCustomization": "Tooltip Customization: flexible styling, colors, sizing, and appearance options for different design contexts and brand needs.",
    "tooltipAccessibility": "Tooltip Accessibility: proper ARIA attributes, keyboard navigation, and screen reader support for contextual information consumption.",
    "whenToUseTooltip": "When to use",
    "provideAdditionalContextOrExplanations": "Provide additional context or explanations",
    "showHelpfulHintsOrTips": "Show helpful hints or tips",
    "explainAbbreviationsOrTechnicalTerms": "Explain abbreviations or technical terms",
    "displayAdditionalInformationAboutIconsOrButtons": "Display additional information about icons or buttons",
    "guideUsersThroughComplexInterfaces": "Guide users through complex interfaces",
    "usageTooltip": "Usage",
    "variantsTooltip": "Variants",
    "basicTooltip": "Basic Tooltip",
    "multipleTooltips": "Multiple Tooltips",
    "propsTooltip": "Props",
    "accessibilityTooltip": "Accessibility",
    "designGuidelinesTooltip": "Design Guidelines",
    "tooltipsAreAnnouncedToScreenReaders": "Tooltips are announced to screen readers",
    "keyboardNavigationIsSupportedTooltip": "Keyboard navigation is supported",
    "focusManagementIsHandledCorrectlyTooltip": "Focus management is handled correctly",
    "properAriaAttributesAreAppliedTooltip": "Proper ARIA attributes are applied",
    "colorIsNotTheOnlyWayToConveyInformationTooltip": "Color is not the only way to convey information",
    "keepTooltipContentConciseAndHelpful": "Keep tooltip content concise and helpful",
    "dontRelySolelyOnTooltipsForCriticalInformation": "Don't rely solely on tooltips for critical information",
    "toastComponent": "Toast Component",
    "toastDescription": "The Toast component provides temporary notifications that appear and disappear automatically. It's perfect for showing success messages, errors, or other brief feedback to users.",
    "toastIntroduction": "Introduction",
    "toastIntroDesc": "The Toast component includes several complementary features to handle various notification and feedback scenarios:",
    "toastMainWrapper": "Toast: the main wrapper for creating temporary notifications that provide feedback without blocking user workflow.",
    "toastVariantsIntro": "Toast Variants: multiple notification types (success, warning, error, info) with appropriate icons and styling for different message types.",
    "toastPositioning": "Toast Positioning: flexible positioning system with multiple placement options (top-center, top-right, bottom-right) for optimal visibility.",
    "toastTiming": "Toast Timing: automatic dismissal with configurable duration and manual close functionality for different notification needs.",
    "toastCustomization": "Toast Customization: flexible styling, icons, titles, and content options for brand-specific notification designs.",
    "toastAccessibility": "Toast Accessibility: proper ARIA attributes, screen reader announcements, and keyboard navigation support for notification consumption.",
    "whenToUseToast": "When to use",
    "showSuccessMessagesAfterActions": "Show success messages after actions",
    "displayErrorNotifications": "Display error notifications",
    "provideBriefStatusUpdates": "Provide brief status updates",
    "showConfirmationMessages": "Show confirmation messages",
    "displaySystemNotifications": "Display system notifications",
    "usageToast": "Usage",
    "variantsToast": "Variants",
    "basicToast": "Basic Toast",
    "toastVariants": "Toast Variants",
    "toastPositions": "Toast Positions",
    "persistentToast": "Persistent Toast",
    "propsToast": "Props",
    "accessibilityToast": "Accessibility",
    "designGuidelinesToast": "Design Guidelines",
    "toastsAreAnnouncedToScreenReaders": "Toasts are announced to screen readers",
    "focusManagementIsHandledCorrectlyToast": "Focus management is handled correctly",
    "keyboardNavigationIsSupportedToast": "Keyboard navigation is supported",
    "colorIsNotTheOnlyWayToConveyInformationToast": "Color is not the only way to convey information",
    "properAriaAttributesAreAppliedToast": "Proper ARIA attributes are applied",
    "keepToastMessagesConciseAndClear": "Keep toast messages concise and clear",
    "useAppropriateVariantsForDifferentMessageTypes": "Use appropriate variants for different message types",
    "dontShowTooManyToastsAtOnce": "Don't show too many toasts at once",
    "considerMobilePositioningAndSizing": "Consider mobile positioning and sizing",
    "previous": "Previous",
    "next": "Next",
    "preview": "Preview",
    "code": "Code",
    "copied": "Copied!",
    "copyCode": "Copy code",
    "notFound": {
      "title": "Page Not Found",
      "description": "Oops! The page you're looking for doesn't exist or has been moved.",
      "goHome": "Go Home",
      "goBack": "Go Back",
      "helpText": "Need help? Check out our",
      "gettingStarted": "Getting Started guide",
      "orBrowse": "or browse our",
      "components": "Components"
    }
  }